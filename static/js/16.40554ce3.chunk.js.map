{"version":3,"sources":["components/Markdown.tsx","components/Markdown.module.less","pages/editable-input/index.tsx","../../src/index.tsx"],"names":["Markdown","props","editorUrl","getMdStr","example","state","mdStr","this","then","str","setState","default","className","styles","warpper","markdown","source","replace","style","padding","footer","href","target","src","alt","Component","module","exports","Example","useContext","Context","hsva","dispatch","label","value","hsvaToHex","onChange","evn","validHex","hexToHsva","onBlur","length","slice","startsWith","placement","width","alignItems","labelStyle","position","display","marginTop","a","val","Number","Page","EditableInput","prefixCls","useState","isFocus","useRef","useEffect","setValue","placementStyle","fontSize","ref","valInit","test","String","getNumberValue","isNaN","autoComplete","onFocus","paddingTop","paddingBottom","paddingLeft","paddingRight","boxSizing","border","boxShadow","color","textTransform","children"],"mappings":"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","file":"static/js/16.40554ce3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')} style={{ padding: '20px 26px' }} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright Â© 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"Markdown_markdown__2igKS\",\"warpper\":\"Markdown_warpper__1Ekz5\",\"example\":\"Markdown_example__3LCkn\",\"footer\":\"Markdown_footer__2D6Vq\"};","import { useContext } from 'react';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport { hsvaToHex, validHex, hexToHsva } from '@uiw/react-color';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div>\n      <EditableInput\n        label=\"Hex\"\n        value={hsvaToHex(hsva)}\n        onChange={(evn, value) => {\n          if (validHex(evn.target.value)) {\n            dispatch!({ hsva: hexToHsva(evn.target.value) });\n          }\n        }}\n        onBlur={(evn) => {\n          const value = evn.target.value;\n          if (value.replace(/^#/, '').length > 6) {\n            evn.target.value = value.slice(0, value.startsWith('#') ? 7 : 6);\n          }\n        }}\n        placement=\"top\"\n        style={{ width: 68, alignItems: 'flex-start' }}\n      />\n      <EditableInput\n        label=\"Hex\"\n        placement=\"right\"\n        value={hsvaToHex(hsva)}\n        onChange={(evn) => {\n          if (validHex(evn.target.value)) {\n            dispatch!({ hsva: hexToHsva(evn.target.value) });\n          }\n        }}\n        labelStyle={{ position: 'relative', display: 'block' }}\n        style={{\n          width: 84,\n          marginTop: 8,\n        }}\n      />\n      <br />\n      <EditableInput\n        label=\"Hex\"\n        value={hsvaToHex(hsva)}\n        onChange={(evn) => {\n          if (validHex(evn.target.value)) {\n            dispatch!({ hsva: hexToHsva(evn.target.value) });\n          }\n        }}\n        placement=\"left\"\n        style={{ width: 84 }}\n      />\n      <EditableInput\n        label=\"Alpha\"\n        value={hsva.a}\n        onChange={(evn, value) => {\n          let val = (value > 1 ? 1 : value) as number;\n          dispatch!({ hsva: { ...hsva, a: val } });\n        }}\n        onBlur={(evn) => {\n          if (Number(evn.target.value) > 1) {\n            evn.target.value = '1';\n          }\n        }}\n        labelStyle={{ position: 'relative', display: 'block' }}\n        style={{\n          width: 68,\n          marginTop: 8,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-editable-input/README.md';\n  getMdStr = () => import('@uiw/react-color-editable-input/README.md');\n  example = (<Example />);\n}\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n"],"sourceRoot":""}